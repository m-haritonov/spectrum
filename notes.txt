TODO: rename XxxException to ExceptionXxx (by analogy with ReflectionClass/Object/Function)
TODO: убрать проверку outputFormat в конфиге

TODO: создать Html::escapeHtml($text){ return htmlspecialchars($text, ENT_QUOTES | ENT_HTML401, 'iso-8859-1'); }
TODO: убрать htmlspecialchars из Component::translate, обернуть вызов Component::translate в $this->escapeHtml()

TODO: удалить getSpecsByName (т.к. она требует сравнения в разных кодировках) или добавить параметр $charset, задающий кодировку аргумента

TODO: throwsException — mb_stripos -> mb_strpos

TODO: output перенести в драйвер (метод put удалить или в репортс плагин)

TODO: fix encoding
TODO: данные спеки конвертировать в кодировку скрипта (utf 8) или лучше каждую выводимую строчку конвертировать в выходную кодировку (convertToOutputEncodingFromScriptCharset и convertToOutputEncodingFromSpecInputCharset)
TODO: indention и newline не конвертировать, предположив что они уже в выходной кодировке
TODO: изменить autoload
TODO: change "$spec->getName()" to "$spec->output->convertToOutputCharset($spec->getName())" in exception messages
TODO: reports -> use "convertToOutputEncoding"
TODO: mb_*('', 'latin1'|$spec->charset->getInputEncoding()) и т.п. 
TODO: использовать convertToOutputCharset при выводе данных из:
Spec::setName()
Messages::add()
ResultBuffer::addResult()
Output::put('текст')
fail()


TODO: рядом с результатом (серым шрифтом) и в верхнем и нижнем блоке писать кол-во выполненных тестов, время выполнения каждого теста и группы тестов (время выполнения группы вычислять либо путём сложения времени детей либо замерять реальное время выполнения либо писать оба значения либо одно значение писать в title)

TODO: добавить информацию о фреймворке (название, версию и адрес сайта): либо при нажатии на иконку [i] либо в конце нижнего блока totalResult (<a href="http://spectrum-framework.org/">Spectrum 1.0</a>)

TODO: change text "Run results buffer contains" and etc.
TODO: добавить всплывающие подсказки с разъяснениями к элементам ползунка "Details"
TODO: success ("has empty" or "success, has empty")
TODO: плагин "Report": добавить title к резальтату или выводить "success", если есть "success" и "empty" дети
		empty title — "empty or has empty", "all or one of children was empty"
		all specs is "success"
		one or more specs is "fail"
		one or more specs is "empty" and has no "fail"
		
TODO: Показывать в отчетах null для value1 у оператора throws если исключение не выбрасывалось
TODO: вернуть отображение trace в оъектах exception, сделав сворачивание списка/разворачивание элементов дерева
TODO: реализовать проверку *RECURSION* в VariableHierarchical (в элементе массива тоже может содержаться объект)

TODO: create "Reports" test "testGeneratesValidXhtml" (проверяет валидность вёрстки)

TODO: fix reports in all browsers 

TODO: plugin OutputCapture (плюс вывод в отчёте в отдельном блоке с визуализацией пробельных символов), onEndingSpecExecuteBefore/After or onSpecRunStart/Finish
TODO: matchers: be(function(){})->output('aaa a aaaaa ');

TODO: rename contexts->add to addFunction/addApplierFunction/addContextApplier ???
TODO: перенести инициализацию контекстов в плагин "Test"???
TODO: заменить this() передачей аргумента с экземпляром контекста???
TODO: игнорировать пойманные ошибки в случае установки catchPhpErrors в "0" или отображать простам текстом в выводе ???
TODO: добавить setCatchPhpErrors(true/false) ???
TODO: rename setCatchPhpErrors to setErrorLevel/setPhpErrorLevel/setCatchPhpErrorLevel/setCatchingPhpErrorLevel ???
TODO: choose exception naming style: BreakException vs ExceptionBreak
TODO: rename activateMoment to activateType/activationType ???
TODO: ResultBuffer: rename $result['result'] to $result['value/flag'] ???

TODO: проверить методы интерфейсов на соответствие методам класса и наоборот
TODO: написать doc комментарии к методам
TODO: проработать тексты сообщений в исключениях (возможно, привести к единому формату вида "function/method name: message"), проверить их грамотность
TODO: remove old tests
TODO: create "\spectrum\run" function ???
TODO: MOVE PROJECT TO GITHUB.COM

TODO: array context group:
	group('aaa', array(
		'Номер мегафон' => array('code' => '495', 'phone' => '35861923'),
		'group: Межгород' => array(
			'Номер мегафон' => array('code' => '495', 'phone' => '35861923'),
			'Номер МТС' => array('code' => '495', 'phone' => '35861923'),
		),
	), function(){
		test('bbb', function(){});
	});

TO MAN: Убрать лишние условия дя примеров, пускай пучше бутлут одни суккесы в результатах
TO MAN: Убрать из примера files, оставив только базы данных
TO MAN: Для примеров использовать скриншоты и ссылку на живое выполнение ???
TO MAN: значения порядка вызова событий от -100 до 100 используются при регистрации базовых плагинов
TO MAN: заменить "Spectrum is a PHP framework for BDD specification test" на "Spectrum is a PHP framework for test automation"
TO MAN: поддерживаются кодировки, являющиеся надмножеством ASCII
TO MAN: на главной закрепить образец использования:
test('ожидаемый результат', function(){
	// код для проверки ожидаемого результата
}) 

TODO: добавить возможность перевода??? Пример: 
test('Makes something', function(){}, function(){
	// ...
	// ...
	// ...
	// ...
	// ...
}, array(
	'translations/langs' => array(
		'ru' => 'Делает что-либо',
	)
));

или:
translate('Делает что-либо', 'ru');
it('Makes something'), function(){});

установка используемого для отображения языка:
$spec->output/translate->setLanguage('ru');

TODO: создать функцию для автоматической генерации контекстов во всевозможных комбинациях на основе множества значений (предполагаемые названия функции: combine, generate)
TODO: плагин "Report": добавить возможность параллельного сохранения отчёта в файл (report->setWriteToFile())
TODO: run.php
	сделать run.php
	run.php?path=qwe.php&id=spec1_1_1
	возможность указывать путь к файлу или к папке, а так же несколько таких путей
	параметр "show file names":
		линейно (имена файлов выводятся целиком, файлы перечисляются подряд)
		иерархически (для каждой папки создаётся спека с именем этой папки)

TODO: плагин "Report": добавить ссылку "выполнить только этот тест" — в текущем контексте, во всех контекстах

TODO: assert, счетчик вызовов
Command::expectCount();
incrementCount()
count(getRunningInstance()->getResultStack())

--- mock
Spy
FileSystemMockReal
FileSystemMockVirtual

--- output:
	Вопрос: if ($spec->getName() == $name) — перекодировать надо или лучше хранить данные внутри обьектов в UTF-8?
	Ответ:
		Нет, т.к. тогда надо будет перекодировать данные в:
			Spec->setName(),
			SpecContainerPattern->setArguments(),
			SpecContainerPattern->getArguments() — при передаче callback функции в itLikePattern()
			SpecItemIt->setTestCallbackArguments(),
			SpecItemIt->getTestCallbackArguments() — при передаче testCallback функции
		Плюс плагины будут видеть данные world в исходной кодировке, т.к. полностью (включая данные их возможных в нем
		методов) перекодировать его будет проблематично.

		И если внутри кода тестов, написанного в одной кодировке будет вызван один из этих методов, то ему придется
		знать о том, что созданные им данные хранятся в обьектной структуре в другой кодировке и перекодировать.

		Вывод: оставляем хранение данных в обьектной структуре в исходной кодировке, отдавая таким образом предпочтение
		более прозрачной работе с кодировками из тестов, нежели из дополнительных обработчиков вне кода тестов (плагинов,
		кода обработки в runner'е и т.п.)

TODO: создать дополнительные матчеры??? Список:
spectrum_DefaultMatchers_Base_BePhpError(level)

spectrum_DefaultMatchers_File_BeFileExists
spectrum_DefaultMatchers_File_BeFileContentEqual
spectrum_DefaultMatchers_File_BeFileIsDir
spectrum_DefaultMatchers_File_BeFileIsFile
spectrum_DefaultMatchers_File_BeFileIsLink
spectrum_DefaultMatchers_File_BeFileIsExecutable
spectrum_DefaultMatchers_File_BeFileIsReadable
spectrum_DefaultMatchers_File_BeFileIsUploaded
spectrum_DefaultMatchers_File_BeFileIsWritable

spectrum_DefaultMatchers_Array_BeArrayHasKey
spectrum_DefaultMatchers_Array_BeArrayHasValue
spectrum_DefaultMatchers_Array_BeArrayHasAllKeys
spectrum_DefaultMatchers_Array_BeArrayHasAllValues
spectrum_DefaultMatchers_Array_BeArrayHasAnyKey
spectrum_DefaultMatchers_Array_BeArrayHasAnyValue
spectrum_DefaultMatchers_Array_BeArrayUnsortedEqual
spectrum_DefaultMatchers_Array_BeArrayUnsortedEqualRecursive
spectrum_DefaultMatchers_Array_BeArrayUnsortedIdentical
spectrum_DefaultMatchers_Array_BeArrayUnsortedIdenticalRecursive
spectrum_DefaultMatchers_Array_BeArrayCountEqual

spectrum_DefaultMatchers_String_BeStringContain
spectrum_DefaultMatchers_String_BeStringContainInPosition
spectrum_DefaultMatchers_String_BeStringStartWith
spectrum_DefaultMatchers_String_BeStringEndWith
spectrum_DefaultMatchers_File_BeStringEndWithAnySlash
spectrum_DefaultMatchers_File_BeStringStartWithAnySlash

spectrum_DefaultMatchers_RegExp_BePregMatch

spectrum_DefaultMatchers_Xml_BeXmlWellFormed
spectrum_DefaultMatchers_Xml_BeXmlValid

spectrum_DefaultMatchers_Html_BeHtmlAttributeEqual
spectrum_DefaultMatchers_Html_BeHtmlContainTag
spectrum_DefaultMatchers_Html_BeHtmlCorrect
spectrum_DefaultMatchers_Html_BeHtmlWellFormed
spectrum_DefaultMatchers_Html_BeHtmlValid